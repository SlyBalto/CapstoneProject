{"ast":null,"code":"var _jsxFileName = \"C:\\\\SlyStudios\\\\Coursera\\\\SlyCapstoneProject\\\\src\\\\components\\\\bookingTimesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// initial all booking times (that would come from API)\n// const fetchInitialBookingTimes = async () => {\n//   const API_URL = \"https://my-json-server.typicode.com/SlyBalto/little-lemon-booking/bookingTimes\";\n\n//   try {\n//     const response = await fetch(API_URL);\n//     if (!response.ok) {\n//       throw new Error(`HTTP error!! Status: ${response.status}`);\n//     }\n//     const data = await response.json();\n//     console.log(\"Fetched booking times:\", data);\n\n//     const bookingTimes = Array.isArray(data) ? data : Object.values(data);\n//     console.log(\"booking times:\", bookingTimes);\n\n//     return bookingTimes;\n\n//   } catch (error) {\n//     console.error(\"Error fetching booking times:\", error);\n//     return []; // returns empty array in case of error\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchInitialBookingTimes = [{\n  \"time\": \"11:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"11:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"12:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"12:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"13:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"13:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"14:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"14:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"15:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"15:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"16:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"16:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"17:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"17:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"18:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"18:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"19:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"19:30\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"20:00\",\n  \"isAvailable\": true\n}, {\n  \"time\": \"20:30\",\n  \"isAvailable\": true\n}];\nconst BookingTimesContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const BookingTimesProvider = ({\n  children\n}) => {\n  _s();\n  const [bookingTimes, setBookingTimes] = useState(fetchInitialBookingTimes);\n\n  // sets a specific time as unavailable\n  const setTimeUnavailable = selectedTime => {\n    setBookingTimes(prevBookingTimes => prevBookingTimes.map(timeSlot => timeSlot.time === selectedTime ? {\n      ...timeSlot,\n      isAvailable: false\n    } : timeSlot));\n  };\n  return /*#__PURE__*/_jsxDEV(BookingTimesContext.Provider, {\n    value: {\n      bookingTimes,\n      setTimeUnavailable\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(BookingTimesProvider, \"63UrgnZtcbb1Uf3pSznTArINkNA=\");\n_c = BookingTimesProvider;\nexport const useBookingTimes = () => {\n  _s2();\n  return useContext(BookingTimesContext);\n};\n_s2(useBookingTimes, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default BookingTimesContext;\nvar _c;\n$RefreshReg$(_c, \"BookingTimesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","fetchInitialBookingTimes","BookingTimesContext","BookingTimesProvider","children","_s","bookingTimes","setBookingTimes","setTimeUnavailable","selectedTime","prevBookingTimes","map","timeSlot","time","isAvailable","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBookingTimes","_s2","$RefreshReg$"],"sources":["C:/SlyStudios/Coursera/SlyCapstoneProject/src/components/bookingTimesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState} from 'react';\r\n\r\n// initial all booking times (that would come from API)\r\n// const fetchInitialBookingTimes = async () => {\r\n//   const API_URL = \"https://my-json-server.typicode.com/SlyBalto/little-lemon-booking/bookingTimes\";\r\n\r\n//   try {\r\n//     const response = await fetch(API_URL);\r\n//     if (!response.ok) {\r\n//       throw new Error(`HTTP error!! Status: ${response.status}`);\r\n//     }\r\n//     const data = await response.json();\r\n//     console.log(\"Fetched booking times:\", data);\r\n\r\n//     const bookingTimes = Array.isArray(data) ? data : Object.values(data);\r\n//     console.log(\"booking times:\", bookingTimes);\r\n\r\n//     return bookingTimes;\r\n\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching booking times:\", error);\r\n//     return []; // returns empty array in case of error\r\n//   }\r\n// };\r\n\r\nconst fetchInitialBookingTimes = [\r\n  { \"time\": \"11:00\", \"isAvailable\": true },\r\n  { \"time\": \"11:30\", \"isAvailable\": true },\r\n  { \"time\": \"12:00\", \"isAvailable\": true },\r\n  { \"time\": \"12:30\", \"isAvailable\": true },\r\n  { \"time\": \"13:00\", \"isAvailable\": true },\r\n  { \"time\": \"13:30\", \"isAvailable\": true },\r\n  { \"time\": \"14:00\", \"isAvailable\": true },\r\n  { \"time\": \"14:30\", \"isAvailable\": true },\r\n  { \"time\": \"15:00\", \"isAvailable\": true },\r\n  { \"time\": \"15:30\", \"isAvailable\": true },\r\n  { \"time\": \"16:00\", \"isAvailable\": true },\r\n  { \"time\": \"16:30\", \"isAvailable\": true },\r\n  { \"time\": \"17:00\", \"isAvailable\": true },\r\n  { \"time\": \"17:30\", \"isAvailable\": true },\r\n  { \"time\": \"18:00\", \"isAvailable\": true },\r\n  { \"time\": \"18:30\", \"isAvailable\": true },\r\n  { \"time\": \"19:00\", \"isAvailable\": true },\r\n  { \"time\": \"19:30\", \"isAvailable\": true },\r\n  { \"time\": \"20:00\", \"isAvailable\": true },\r\n  { \"time\": \"20:30\", \"isAvailable\": true }\r\n]\r\n\r\n\r\nconst BookingTimesContext = createContext();\r\n\r\n// Provider component\r\nexport const BookingTimesProvider = ({ children }) => {\r\n  const [bookingTimes, setBookingTimes] = useState(fetchInitialBookingTimes);\r\n\r\n  // sets a specific time as unavailable\r\n  const setTimeUnavailable = (selectedTime) => {\r\n    setBookingTimes((prevBookingTimes) =>\r\n      prevBookingTimes.map((timeSlot) =>\r\n        timeSlot.time === selectedTime\r\n          ? { ...timeSlot, isAvailable: false }\r\n          : timeSlot\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BookingTimesContext.Provider value={{ bookingTimes, setTimeUnavailable }}>\r\n      {children}\r\n    </BookingTimesContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useBookingTimes = () => useContext(BookingTimesContext);\r\n\r\nexport default BookingTimesContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}