{"ast":null,"code":"var _jsxFileName = \"C:\\\\SlyStudios\\\\Coursera\\\\SlyCapstoneProject\\\\src\\\\components\\\\bookingTimesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// initial all booking times (that would come from API)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchBookingTimes = async () => {\n  const API_URL = \"https://my-json-server.typicode.com/SlyBalto/little-lemon-booking/bookingTimes\";\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log(\"Fetched booking times:\", data);\n  } catch (error) {\n    console.error(\"Error fetching booking times:\", error);\n  }\n};\nfetchBookingTimes();\nconst BookingTimesContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const BookingTimesProvider = ({\n  children\n}) => {\n  _s();\n  const [bookingTimes, setBookingTimes] = useState(initialBookingTimes);\n\n  // sets a specific time as unavailable\n  const setTimeUnavailable = selectedTime => {\n    setBookingTimes(prevBookingTimes => prevBookingTimes.map(timeSlot => timeSlot.time === selectedTime ? {\n      ...timeSlot,\n      isAvailable: false\n    } : timeSlot));\n  };\n  return /*#__PURE__*/_jsxDEV(BookingTimesContext.Provider, {\n    value: {\n      bookingTimes,\n      setTimeUnavailable\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(BookingTimesProvider, \"taCq5CCfLz57pmnftM6YyFRFLV0=\");\n_c = BookingTimesProvider;\nexport const useBookingTimes = () => {\n  _s2();\n  return useContext(BookingTimesContext);\n};\n_s2(useBookingTimes, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default BookingTimesContext;\nvar _c;\n$RefreshReg$(_c, \"BookingTimesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","fetchBookingTimes","API_URL","response","fetch","ok","Error","status","data","json","console","log","error","BookingTimesContext","BookingTimesProvider","children","_s","bookingTimes","setBookingTimes","initialBookingTimes","setTimeUnavailable","selectedTime","prevBookingTimes","map","timeSlot","time","isAvailable","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBookingTimes","_s2","$RefreshReg$"],"sources":["C:/SlyStudios/Coursera/SlyCapstoneProject/src/components/bookingTimesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState} from 'react';\r\n\r\n// initial all booking times (that would come from API)\r\nconst fetchBookingTimes = async () => {\r\n  const API_URL = \"https://my-json-server.typicode.com/SlyBalto/little-lemon-booking/bookingTimes\";\r\n\r\n  try {\r\n    const response = await fetch(API_URL);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    console.log(\"Fetched booking times:\", data);\r\n  } catch (error) {\r\n    console.error(\"Error fetching booking times:\", error);\r\n  }\r\n};\r\nfetchBookingTimes();\r\n\r\n\r\nconst BookingTimesContext = createContext();\r\n\r\n// Provider component\r\nexport const BookingTimesProvider = ({ children }) => {\r\n  const [bookingTimes, setBookingTimes] = useState(initialBookingTimes);\r\n\r\n  // sets a specific time as unavailable\r\n  const setTimeUnavailable = (selectedTime) => {\r\n    setBookingTimes((prevBookingTimes) =>\r\n      prevBookingTimes.map((timeSlot) =>\r\n        timeSlot.time === selectedTime\r\n          ? { ...timeSlot, isAvailable: false }\r\n          : timeSlot\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BookingTimesContext.Provider value={{ bookingTimes, setTimeUnavailable }}>\r\n      {children}\r\n    </BookingTimesContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useBookingTimes = () => useContext(BookingTimesContext);\r\n\r\nexport default BookingTimesContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,OAAO,GAAG,gFAAgF;EAEhG,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,CAAC;IACrC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;AACF,CAAC;AACDX,iBAAiB,CAAC,CAAC;AAGnB,MAAMY,mBAAmB,gBAAGjB,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMkB,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAACqB,mBAAmB,CAAC;;EAErE;EACA,MAAMC,kBAAkB,GAAIC,YAAY,IAAK;IAC3CH,eAAe,CAAEI,gBAAgB,IAC/BA,gBAAgB,CAACC,GAAG,CAAEC,QAAQ,IAC5BA,QAAQ,CAACC,IAAI,KAAKJ,YAAY,GAC1B;MAAE,GAAGG,QAAQ;MAAEE,WAAW,EAAE;IAAM,CAAC,GACnCF,QACN,CACF,CAAC;EACH,CAAC;EAED,oBACExB,OAAA,CAACa,mBAAmB,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,YAAY;MAAEG;IAAmB,CAAE;IAAAL,QAAA,EACvEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;;AAED;AAAAhB,EAAA,CArBaF,oBAAoB;AAAAmB,EAAA,GAApBnB,oBAAoB;AAsBjC,OAAO,MAAMoB,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACgB,mBAAmB,CAAC;AAAA;AAACsB,GAAA,CAAxDD,eAAe;AAE5B,eAAerB,mBAAmB;AAAC,IAAAoB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}