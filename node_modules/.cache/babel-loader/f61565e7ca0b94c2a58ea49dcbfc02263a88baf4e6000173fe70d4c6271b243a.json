{"ast":null,"code":"var _jsxFileName = \"C:\\\\SlyStudios\\\\Coursera\\\\SlyCapstoneProject\\\\src\\\\components\\\\bookingTimesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// initial all booking times (that would come from API)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchInitialBookingTimes = async () => {\n  const API_URL = \"https://my-json-server.typicode.com/SlyBalto/little-lemon-booking/bookingTimes\";\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      throw new Error(`HTTP error!! Status: ${response.status}`);\n    }\n    const bookingTimes = await response.json(); // Directly fetches the array\n    console.log(\"Fetched booking times:\", bookingTimes);\n    return bookingTimes;\n  } catch (error) {\n    console.error(\"Error fetching booking times:\", error);\n    return []; // Return an empty array in case of error\n  }\n};\nexport const BookingTimesProvider = ({\n  children\n}) => {\n  _s();\n  const [bookingTimes, setBookingTimes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const times = await fetchInitialBookingTimes();\n      setBookingTimes(times); // Set the fetched array into state\n      setLoading(false); // Set loading to false\n    };\n    fetchData();\n  }, []);\n\n  // sets a specific time as unavailable\n  const setTimeUnavailable = selectedTime => {\n    setBookingTimes(prevBookingTimes => prevBookingTimes.map(timeSlot => timeSlot.time === selectedTime ? {\n      ...timeSlot,\n      isAvailable: false\n    } : timeSlot));\n  };\n  return /*#__PURE__*/_jsxDEV(BookingTimesContext.Provider, {\n    value: {\n      bookingTimes,\n      setTimeUnavailable\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(BookingTimesProvider, \"fqAsqQA7cmho5vhqQ5NBHj9XeGk=\");\n_c = BookingTimesProvider;\nexport const useBookingTimes = () => {\n  _s2();\n  return useContext(BookingTimesContext);\n};\n_s2(useBookingTimes, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default BookingTimesContext;\nvar _c;\n$RefreshReg$(_c, \"BookingTimesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","fetchInitialBookingTimes","API_URL","response","fetch","ok","Error","status","bookingTimes","json","console","log","error","BookingTimesProvider","children","_s","setBookingTimes","useEffect","fetchData","times","setLoading","setTimeUnavailable","selectedTime","prevBookingTimes","map","timeSlot","time","isAvailable","BookingTimesContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBookingTimes","_s2","$RefreshReg$"],"sources":["C:/SlyStudios/Coursera/SlyCapstoneProject/src/components/bookingTimesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState} from 'react';\r\n\r\n// initial all booking times (that would come from API)\r\nconst fetchInitialBookingTimes = async () => {\r\n  const API_URL = \"https://my-json-server.typicode.com/SlyBalto/little-lemon-booking/bookingTimes\";\r\n\r\n  try {\r\n    const response = await fetch(API_URL);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error!! Status: ${response.status}`);\r\n    }\r\n    const bookingTimes = await response.json(); // Directly fetches the array\r\n    console.log(\"Fetched booking times:\", bookingTimes);\r\n\r\n    return bookingTimes;\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching booking times:\", error);\r\n    return []; // Return an empty array in case of error\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const BookingTimesProvider = ({ children }) => {\r\n  const [bookingTimes, setBookingTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const times = await fetchInitialBookingTimes();\r\n      setBookingTimes(times); // Set the fetched array into state\r\n      setLoading(false); // Set loading to false\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // sets a specific time as unavailable\r\n  const setTimeUnavailable = (selectedTime) => {\r\n    setBookingTimes((prevBookingTimes) =>\r\n      prevBookingTimes.map((timeSlot) =>\r\n        timeSlot.time === selectedTime\r\n          ? { ...timeSlot, isAvailable: false }\r\n          : timeSlot\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BookingTimesContext.Provider value={{ bookingTimes, setTimeUnavailable }}>\r\n      {children}\r\n    </BookingTimesContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useBookingTimes = () => useContext(BookingTimesContext);\r\n\r\nexport default BookingTimesContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMC,OAAO,GAAG,gFAAgF;EAEhG,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,CAAC;IACrC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC5D;IACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,YAAY,CAAC;IAEnD,OAAOA,YAAY;EAErB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC;AAID,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACP,YAAY,EAAEQ,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpDmB,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAG,MAAMlB,wBAAwB,CAAC,CAAC;MAC9Ce,eAAe,CAACG,KAAK,CAAC,CAAC,CAAC;MACxBC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,kBAAkB,GAAIC,YAAY,IAAK;IAC3CN,eAAe,CAAEO,gBAAgB,IAC/BA,gBAAgB,CAACC,GAAG,CAAEC,QAAQ,IAC5BA,QAAQ,CAACC,IAAI,KAAKJ,YAAY,GAC1B;MAAE,GAAGG,QAAQ;MAAEE,WAAW,EAAE;IAAM,CAAC,GACnCF,QACN,CACF,CAAC;EACH,CAAC;EAED,oBACEzB,OAAA,CAAC4B,mBAAmB,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAEtB,YAAY;MAAEa;IAAmB,CAAE;IAAAP,QAAA,EACvEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;;AAED;AAAAnB,EAAA,CA/BaF,oBAAoB;AAAAsB,EAAA,GAApBtB,oBAAoB;AAgCjC,OAAO,MAAMuB,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAAC+B,mBAAmB,CAAC;AAAA;AAACS,GAAA,CAAxDD,eAAe;AAE5B,eAAeR,mBAAmB;AAAC,IAAAO,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}